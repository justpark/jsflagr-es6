/**
 * Flagr
 * Flagr is a feature flagging, A/B testing and dynamic configuration microservice
 *
 * OpenAPI spec version: 1.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import EvalContext from './EvalContext';
import EvalDebugLog from './EvalDebugLog';





/**
* The EvalResult model module.
* @module model/EvalResult
* @version 1.0.10
*/
export default class EvalResult {
    /**
    * Constructs a new <code>EvalResult</code>.
    * @alias module:model/EvalResult
    * @class
    * @param flagID {Number} 
    * @param flagKey {String} 
    * @param segmentID {Number} 
    * @param variantID {Number} 
    * @param variantKey {String} 
    * @param variantAttachment {Object} 
    * @param evalContext {module:model/EvalContext} 
    * @param timestamp {String} 
    */

    constructor(flagID, flagKey, segmentID, variantID, variantKey, variantAttachment, evalContext, timestamp) {
        

        
        

        this['flagID'] = flagID;this['flagKey'] = flagKey;this['segmentID'] = segmentID;this['variantID'] = variantID;this['variantKey'] = variantKey;this['variantAttachment'] = variantAttachment;this['evalContext'] = evalContext;this['timestamp'] = timestamp;

        
    }

    /**
    * Constructs a <code>EvalResult</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/EvalResult} obj Optional instance to populate.
    * @return {module:model/EvalResult} The populated <code>EvalResult</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EvalResult();

            
            
            

            if (data.hasOwnProperty('flagID')) {
                obj['flagID'] = ApiClient.convertToType(data['flagID'], 'Number');
            }
            if (data.hasOwnProperty('flagKey')) {
                obj['flagKey'] = ApiClient.convertToType(data['flagKey'], 'String');
            }
            if (data.hasOwnProperty('flagSnapshotID')) {
                obj['flagSnapshotID'] = ApiClient.convertToType(data['flagSnapshotID'], 'Number');
            }
            if (data.hasOwnProperty('segmentID')) {
                obj['segmentID'] = ApiClient.convertToType(data['segmentID'], 'Number');
            }
            if (data.hasOwnProperty('variantID')) {
                obj['variantID'] = ApiClient.convertToType(data['variantID'], 'Number');
            }
            if (data.hasOwnProperty('variantKey')) {
                obj['variantKey'] = ApiClient.convertToType(data['variantKey'], 'String');
            }
            if (data.hasOwnProperty('variantAttachment')) {
                obj['variantAttachment'] = ApiClient.convertToType(data['variantAttachment'], Object);
            }
            if (data.hasOwnProperty('evalContext')) {
                obj['evalContext'] = EvalContext.constructFromObject(data['evalContext']);
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'String');
            }
            if (data.hasOwnProperty('evalDebugLog')) {
                obj['evalDebugLog'] = EvalDebugLog.constructFromObject(data['evalDebugLog']);
            }
        }
        return obj;
    }

    /**
    * @member {Number} flagID
    */
    flagID = undefined;
    /**
    * @member {String} flagKey
    */
    flagKey = undefined;
    /**
    * @member {Number} flagSnapshotID
    */
    flagSnapshotID = undefined;
    /**
    * @member {Number} segmentID
    */
    segmentID = undefined;
    /**
    * @member {Number} variantID
    */
    variantID = undefined;
    /**
    * @member {String} variantKey
    */
    variantKey = undefined;
    /**
    * @member {Object} variantAttachment
    */
    variantAttachment = undefined;
    /**
    * @member {module:model/EvalContext} evalContext
    */
    evalContext = undefined;
    /**
    * @member {String} timestamp
    */
    timestamp = undefined;
    /**
    * @member {module:model/EvalDebugLog} evalDebugLog
    */
    evalDebugLog = undefined;








}


